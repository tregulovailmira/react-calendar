[{"/home/ilmira/VSProjects/react-calendar/src/reportWebVitals.js":"1","/home/ilmira/VSProjects/react-calendar/src/App.js":"2","/home/ilmira/VSProjects/react-calendar/src/components/Calendar/index.jsx":"3","/home/ilmira/VSProjects/react-calendar/src/components/Calendar/Month/index.jsx":"4","/home/ilmira/VSProjects/react-calendar/src/index.js":"5","/home/ilmira/VSProjects/react-calendar/src/components/Calendar/Month/Week/Day/index.jsx":"6","/home/ilmira/VSProjects/react-calendar/src/components/Calendar/Month/Week/index.jsx":"7","/home/ilmira/VSProjects/react-calendar/src/components/Calendar/CurrentDate/index.jsx":"8","/home/ilmira/VSProjects/react-calendar/src/components/Calendar/CalendarNavigation/NavigationButton/index.jsx":"9","/home/ilmira/VSProjects/react-calendar/src/components/Calendar/CalendarNavigation/index.jsx":"10"},{"size":362,"mtime":1611076879486,"results":"11","hashOfConfig":"12"},{"size":130,"mtime":1611079695450,"results":"13","hashOfConfig":"12"},{"size":1245,"mtime":1611181646323,"results":"14","hashOfConfig":"12"},{"size":827,"mtime":1611175729646,"results":"15","hashOfConfig":"12"},{"size":500,"mtime":1611076879486,"results":"16","hashOfConfig":"12"},{"size":505,"mtime":1611177416310,"results":"17","hashOfConfig":"12"},{"size":482,"mtime":1611177249770,"results":"18","hashOfConfig":"12"},{"size":424,"mtime":1611169258060,"results":"19","hashOfConfig":"12"},{"size":175,"mtime":1611180072428,"results":"20","hashOfConfig":"12"},{"size":1041,"mtime":1611181408775,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s9xb4e",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ilmira/VSProjects/react-calendar/src/reportWebVitals.js",[],"/home/ilmira/VSProjects/react-calendar/src/App.js",[],"/home/ilmira/VSProjects/react-calendar/src/components/Calendar/index.jsx",["44","45"],"/home/ilmira/VSProjects/react-calendar/src/components/Calendar/Month/index.jsx",["46","47"],"import React, { useMemo } from 'react';\nimport Week from './Week';\nimport { startOfWeek, endOfMonth, add, format, isSameMonth } from 'date-fns';\n\nconst Month = (props) => {\n  const { selectedMonth } = props;\n  const getWeeks = useMemo(() => {\n    let startDate = startOfWeek(selectedMonth);\n    const weeks = [];\n    do {\n      const weekDates = [];\n\n      for (let i = 0; i < 7; i++) {\n        weekDates.push(startDate);\n        startDate = add(startDate, { days: 1 });\n      }\n\n      weeks.push(weekDates);\n    } while (isSameMonth(selectedMonth, startDate));\n    return weeks;\n  }, [endOfMonth(selectedMonth)]);\n\n  return (\n    <table>\n      <tbody>\n        {getWeeks.map((week) => (\n          <Week {...props} week={week} key={format(week[0], 'w')} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Month;\n","/home/ilmira/VSProjects/react-calendar/src/index.js",[],"/home/ilmira/VSProjects/react-calendar/src/components/Calendar/Month/Week/Day/index.jsx",[],"/home/ilmira/VSProjects/react-calendar/src/components/Calendar/Month/Week/index.jsx",["48"],"import React, { useMemo } from 'react';\nimport Day from './Day';\nimport { format } from 'date-fns';\n\nconst Week = ({ week, ...props }) => {\n  //   const weekRender = useMemo(() => {\n  //     return week.map((day) => (\n  //       <Day {...props} day={day} key={format(day, 'w-d')} />\n  //     ));\n  //   }, [week, props]);\n\n  return (\n    <tr>\n      {week.map((day) => (\n        <Day {...props} day={day} key={format(day, 'w-d')} />\n      ))}\n    </tr>\n  );\n};\n\nexport default Week;\n","/home/ilmira/VSProjects/react-calendar/src/components/Calendar/CurrentDate/index.jsx",[],"/home/ilmira/VSProjects/react-calendar/src/components/Calendar/CalendarNavigation/NavigationButton/index.jsx",[],"/home/ilmira/VSProjects/react-calendar/src/components/Calendar/CalendarNavigation/index.jsx",[],{"ruleId":"49","severity":1,"message":"50","line":10,"column":22,"nodeType":"51","messageId":"52","endLine":10,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":17,"column":5,"nodeType":"55","messageId":"56","endLine":27,"endColumn":6},{"ruleId":"57","severity":1,"message":"58","line":21,"column":6,"nodeType":"59","endLine":21,"endColumn":33,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":21,"column":7,"nodeType":"62","endLine":21,"endColumn":32},{"ruleId":"49","severity":1,"message":"63","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},"no-unused-vars","'setCurrentDay' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'selectedMonth'. Either include it or remove the dependency array.","ArrayExpression",["64"],"React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'useMemo' is defined but never used.",{"desc":"65","fix":"66"},"Update the dependencies array to be: [selectedMonth]",{"range":"67","text":"68"},[585,612],"[selectedMonth]"]